<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        eaMYRWmQvzgguvcQATpdwOGFh9Cj9E8Ys26jg1NmG2CdEsLziPBo4yRa4/JngBKvkGiK8vIT7loEE9ev
        uXpFBuNG58Pb7UcvOlx01L6CB2Zh7U0tSfZPIYdwQPtQMjr7HzRxki1x+TPUKvrehG5mXUm9yHtXIbyd
        0cC81NLw5eaHIY/SIC/ToWy2IsRS6wqjIOjIVoZBt1I1xkbdfe/NBCIC4yRa4/KHw8u0ETmn5lxXFHGt
        hRQVHZTuvpRy8/6KXgIuZ9AIHvN3OCMwj60dwY5lCtXM9g8Fxki1x+UPgx2jUZrynZTuPosEjtBFDntr
        mONBy8/5KEE1V2IQX0oUPUFAe2gB/C+hSO09j4XGSLXfKHYBJ770FQddWgQ/tHdgQEnLo2FNQ1+YO9Hk
        VtXsggAiRaEWCeoTuOvyvtYGIs8H3UCHD7B3PhVnVVlHO195L0Tj15x5UOCsG0I3QSNQCyKAg+8AbirG
        FIAp4r8r7RFJH2Pr8iN+tAwWPuFUGFJ0Q7i0HhDRHAkSDgsAoInGDWEK4o84zYp6rlXrm26MyAMRwYEY
        6IiACWa3FDwxmUSWYWoQFFXe8XQY15IUbiGRrBqxoPgqCdhwigokW/Yubbot6pCJPzTCQTJClhIfwwlS
        wkmSCYS/7lv/2gAMAwEAAgADAAAAEPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPOPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPKAXPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPKBXPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPFXPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPOIfPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PLFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPIPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPHPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPKfPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGQcPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPKIQUfPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPOFUUWBUPBPLfPPPPPPPPPPPP
        PPPPPPPPPPPPOBZTXdPOMdPfPPPPPPPPPPPPPPPPPPPPPPPPPOZHfIfPMXPfPPPPPPPPPPPPPPPPPPPP
        PPPPPNWAfBPLLTPfPPPPPPPPPPPPPPPPPPPPPPPPPIYBOHcGTQecNPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPOHGLFFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP/EABURAQEAAAAAAAAAAAAAAAAAAJAB/9oA
        CAEDAQE/EBwpQf/EABQRAQAAAAAAAAAAAAAAAAAAAKD/2gAIAQIBAT8QIh//xAArEAEAAQIDBwQDAQEB
        AAAAAAABEQAhMVFhEEFxkaHB8GCBsdEgUPHhkKD/2gAIAQEAAT8Q/wCkxGYgSpgA3q0dp54NQSXCeNE4
        VEibYHvLAbk2t6FEijIYSriFdKNywWQifZh4ldb9hI9T0ISbI+2y6V80WDAnoSImXGOAbHTvmt9vU09C
        blAHF+22G4wL+49qncxvcW/oRC7i/uvkbLvQpHVYdWhAZEehL1wDOCoiLZVJphI1h/foWL2OqDtUbeEv
        mohYfbSgYehIkxDyVdib1wHvV6u8voUZLMfipTZulUGdhew7+hd5TrMyHKHapZW4+IdvQu8qfZHkKpc2
        uf0ehd5Vz+hr9MSmK75c3pzdwcvs9CzF6V0hF5/ZTkS0pwf0KkhiRCiIIsHBO1KcWaeEnzow9CNIXviX
        kRxSlKubNI/gEXUoHF1GQRkcH0GXuSZUsABiruoF4Ix78k8zfUBu2T5E1JUBiDJ0E4vbEv6CItJHxLWf
        4Lt/4NTaJKsRoFpzcmS6ZlnOzv8AQIzcAI3F8oe9DLECgAQBoFvxl24IuFnuN9x6BKgE8x4fyCjjcDlV
        0p8egIn/ALP0UVbzgJLkeq3ZbpnYlhsKQMgutQwkhA4UTgly16FtjsyhAMqHbd8qYA4tDfSWjZCLc1nc
        VkVDFUCbADAqIG4ldppbpbLBjehQFvWkRjJuU7RYhw7xInJodRIE5lDW/eBNg0/ZfzJD3owp2oCjopo2
        tlUmmE7X6NeR5q82DHdsN0pduIB9p1hBFINKvAGix9iBeaFE5S1/S0uSniCAEoTYX2xegaZ/beVElPNa
        HVoDDFriMdtzyGdeUz/ZTVuPm/amy4VAzDP5T+lY8wl81jmHiMVJ8+eZ+qn3+iNOOzZ4rNR+PM4JqOqg
        yBiM1DhDJ1PiG255DOvKZ/stztJCByUpw8SD2f8AKg5kmM4XvV+d3cUrw9zwdqvZHxR2tnis1H4DyqgG
        9bHVo+AcLCHpRE28y4PwBGgVbAmecm0rnkM68pn+yhq3RS9qYow7lbwuxKnRlQuoDtUgHBx79hrzysKv
        NgOXYbdg9I5UCkBd16hszlrN3p5fx0LFQ4G054T+IqNZDRqQ6ipsIW0R9aonYz0Bti55DOvKZ/skiYgt
        f0dw961SVSrMz+Syq9lrCk8nL0uXuLi/g2QaUC2XrDA2XxjK7lD0aQ0wD1Gfo6tYCBmB6Uh2RXQPjPbc
        8hnXlM/2QksxKuPLMUf1UqrrS8HuaZcG+5QjzPKffWIceiHfbsN0wRMqjDk0syztCZoPCsRN5ptS6D/R
        11HKnfYe0MdXTIMTfRPmKl8lBOL8gpqnFJdlzyGdeUz/AGRiTV2968NK1oXXU5OD5isfT5D71DJxaM4/
        3V9sYOAbWzxWaj8J8kazThQZ6ZWigMIMMFtKk3w+pgQnWLUgK3BlKdUgBcV6E2XPIZ15TP8AZb6nOc0V
        qzdWv7pwUulPYuyoPKn21dD7Q+tuySBf7lGG0CDLsNd1GZBD6iPWanVUgZwA3QbTxqRIo7GHEIBgiZiJ
        7VHZBS2K/Key51j5rymf7OUv9coGSc70JvACsViIidFFiHFmTQnfExXguErKLYQSaGTb4hPcdBoeCRCE
        dEUp9+S6jKxIak7KrKWsYOgMSx7qkaDzo+AqROzL2sWrz6edfu2SSzcW4h0qwWY51H5VOgH4C/FBCHhY
        NweTUTO7FxFqiQCYYYz2VX7LiiRJJFGOVb/2Can7IhILfAtvoJMQw+NpJarNNkm0suVGbCIGYExJG+zH
        lOE6RoB1ITKzWwOgmuNBBQO+kw1qLpI8YWEs3E9qep+0MAKCYT7UC6ZVLACSylCAyA2SwGDCSikTh0VE
        8LykhCXCTw2BEqEjuxJYNwm1nCaOoEgL5lsdLr1CpIAFVpxf2CDEhJh+CCQgmtFj8P5hX8YrApBIQTWg
        mQHQ2oJcHjQDIDgbVMQ8Sv4xQTIB0P8A3Lf/2Q==
</value>
  </data>
</root>